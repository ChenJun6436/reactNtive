import React, { Component } from 'react';
import {
    AppRegistry,
    StyleSheet,
    Text,
    View,
    Dimensions,
    ScrollView,
    TouchableOpacity,
    TouchableHighlight
} from 'react-native';
// import { inject, observer } from 'mobx-react/native';
import { SearchBar, WhiteSpace, WingBlank, List, Button, InputItem, SwipeAction } from 'antd-mobile-rn';
import Icon from 'react-native-vector-icons/FontAwesome';
import { iconsMap, iconsLoaded } from 'root/src/utils/IconLoader';
import * as PortraitAction from 'root/src/actions/farmersPortrait';
import HotProduct from 'root/src/screens/baseComon/hotProduct'
import * as StoreAction from 'root/src/actions/store'
import LoadMoreList from 'root/src/screens/baseComon/LoadMoreList';
const SCREEN_WIDTH = Dimensions.get('window').width;
const SCREEN_HEIGHT = Dimensions.get('window').height;
const Item = List.Item;

@loadingDecorator
export default class StoreDetail extends Component {
    constructor(props) {
        super(props);
        this.state = {
            model: {},
        }
    }
    componentWillMount() {
        StoreAction.ViewStore({ input: { storeid: this.props.id, longitude: storage.get('longitude'), latitude: storage.get('latitude') } }).then((data) => {
            if (data.suc && data.data && data.data.length != 0)
                this.setState({ model: data.data })
            else {
                Toast.offline('暂无数据！稍后尝试', 3);
            }
            this.setState({ loading: false })
        })
    }
    render() {
        let model = this.state.model
        return (
            <ScrollView style={{ backgroundColor: '#f2f2f2', position: 'relative', height: SCREEN_HEIGHT }}>
                <View style={styles.search}>
                    <InputItem
                        style={{ height: 40, width: '95%', backgroundColor: 'transparent', borderWidth: 1, borderColor: '#bbbbbb', paddingLeft: 10 }}
                        clear
                        value={this.state.storeName}
                        onChange={(value: any) => {
                            this.setState({
                                storeName: value,
                            });
                        }}
                        labelNumber={2}
                        placeholder='请输入用户名'
                        placeholderTextColor='#999999'
                    >
                        <Icon
                            name='search'
                            color='#999999'
                            size={25}
                        />
                    </InputItem>
                </View>
                <View style={styles.container}>
                    <View style={styles.row}>
                        <Text style={{ color: '#999', }}>地址：{model.address}</Text>
                    </View>
                    <View style={[styles.row, { backgroundColor: '#c1c1c1' }]}>
                        <Text style={{ color: '#999', }}>联系人：{model.legalPersonName}</Text>
                    </View>
                    <View style={styles.row}>
                        <Text style={{ color: '#999', }}>联系电话：{model.contactInformation}</Text>
                    </View>

                    <View style={[styles.row, { backgroundColor: '#c1c1c1' }]}>
                        <Text style={{ color: '#999', }}>距离：{model.distance.toFixed(2) + 'km'}</Text>
                        <Text style={{ color: '#999', }}>查看量：{model.viewAmount}</Text>
                    </View>
                    <View style={styles.line}></View>
                    <View>
                        <LoadMoreList
                            ref={ref => this.moreListInst = ref}
                            getData={StoreAction.SearchGoods}
                            searchParams={{ storeid: this.props.id, regionId: storage.get('regionId') }}
                            rowItem={(data) => {
                                return <SwipeAction autoClose style={{ backgroundColor: 'transparent', flex: 1 }} right={[
                                    {
                                        text: '详情',
                                        onPress: () => {
                                            this.pushPage({
                                                component: {
                                                    ...Global.Screens.ProductDetail
                                                }
                                            });
                                        },
                                        style: { backgroundColor: 'orange', color: 'white' },
                                    }
                                ]} >
                                    <TouchableHighlight activeOpacity={0.3} underlayColor={'#eee'}
                                        onPress={() => {
                                            this.pushPage({
                                                component: {
                                                    passProps: { id: data.id },
                                                    ...Global.Screens.ProductDetail,
                                                    options: {
                                                        topBar: {
                                                            title: {
                                                                text: data.name
                                                            }
                                                        }
                                                    },
                                                }
                                            });
                                        }}>
                                        <HotProduct content={data} />
                                    </TouchableHighlight>
                                </SwipeAction>
                            }}
                        />
                    </View>
                </View>
            </ScrollView>
        )
    }
}
const styles = StyleSheet.create({
    container: {
        flex: 1,
        paddingHorizontal: 16,
        paddingVertical: 6,
        marginBottom: 10,
        // paddingLeft: 12,
        // paddingRight: 12
    },
    line: {
        borderWidth: 0.3,
        borderColor: '#aaa',
        borderStyle: 'solid',
        marginTop: 5,
        marginBottom: 5,
    },
    row: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        // height: 36,
        // lineHeight: 28,
        padding: 10
    },
    search: {
        justifyContent: 'center',
        flexDirection: 'row',
        margin: 10,
        paddingRight: 10
    }
});