// @flow

import React, { Component } from 'react';
import {
  View,
  Text,
  TextInput,
  StyleSheet,
  ImageBackground,
  Dimensions,
  Image,
  findNodeHandle,
  Alert,
  AsyncStorage,
  TouchableOpacity
} from 'react-native';

import Icon from 'react-native-vector-icons/FontAwesome';
import { Input } from 'react-native-elements';
import { Button, InputItem } from 'antd-mobile-rn';
import requestPermission from 'root/src/utils/requestPermissions';//获取相机及其他权限
import * as AccountAction from 'root/src/actions/account';
const { connect } = require('remx');
const SCREEN_WIDTH = Dimensions.get('window').width;
const SCREEN_HEIGHT = Dimensions.get('window').height;
const BG_IMAGE = require('root/img/login.jpg');
const LOGO_IMAGE = require('root/img/logo.png');

@navigatorDecorator
export default class LoginScreen extends Component {
  constructor(props: Props) {
    super(props);

    this.state = {
      viewRef: null,
      loginName: '',
      loginPwd: ''
    };

  }
  componentWillMount() {
    let keys = ["loginName", "loginPwd"];
    let self = this;
    AsyncStorage.multiGet(keys, function (errs, result) {
      //如果发生错误，这里直接返回（return）防止进入下面的逻辑
      if (errs) {
        return;
      }
      self.setState({
        loginName: (result[0][1] != null) ? result[0][1] : '',
        loginPwd: (result[1][1] != null) ? result[1][1] : ''
      })
    });
  }
  componentDidMount() {
    //requestPermission();
  }
  login = () => {
    if (!this.state.loginName) {
      Toast.info('请填写用户名', 3);
      return;
    }
    if (!this.state.loginPwd) {
      Toast.info('请填写密码', 3);
      return;
    }
    this.setState({ submitLoading: true })
    AccountAction.login({ input: this.state }).then(({ suc, data }) => {
      if (suc) {
        Global.Navigate.startIndexScreen()
      }
      this.setState({ submitLoading: false })
    })

  }

  imageLoaded = () => {
    this.setState({ viewRef: findNodeHandle(this.backgroundImage) });
  }
  render() {
    const { Account, navigator } = this.props;
    // const { getFieldProps } = this.props.form;
    return (
      <View style={styles.container}>
        <Image
          ref={(img) => { this.backgroundImage = img; }}
          source={BG_IMAGE}
          style={styles.bgImage}
          onLoadEnd={this.imageLoaded}
        />
        <View style={styles.loginView}>
          <View style={styles.register}>
            <Button disabled={this.state.submitLoading}
              style={{ backgroundColor: 'none', borderWidth: 0, }}
              onClick={this.login}
            >
              <Text style={{ fontWeight: 'bold', color: 'blue' }}>注册</Text>
            </Button>
          </View>
          <View style={styles.loginTitle}>
            <Image
              style={{ width: 180, height: 90 }}
              source={LOGO_IMAGE}
            />
            <View style={styles.title}>
              <Text style={styles.travelText}>农户APP</Text>
            </View>
          </View>
          <View style={styles.loginInput}>
            <InputItem
              clear
              value={this.state.labelnum1}
              onChange={(value: any) => {
                this.setState({
                  labelnum1: value,
                });
              }}
              labelNumber={2}
              placeholder="两个字标签"
            >
              <Icon
                name='user'
                color='rgba(171, 189, 219, 1)'
                size={25}
              />
            </InputItem>
            <InputItem
              clear
              type="password"
              value={this.state.password}
              onChange={(value: any) => {
                this.setState({
                  password: value,
                });
              }}
              placeholder="password"
              extra={'找回密码'}
              labelNumber={2}
            >
              <Icon
                name='lock'
                color='rgba(171, 189, 219, 1)'
                size={25}
              />
            </InputItem>
          </View>

        </View>
      </View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    // justifyContent: 'center',
    // alignItems: 'center',
  },
  bgImage: {
    position: "absolute",
    flex: 1,
    top: 0,
    left: 0,
    width: SCREEN_WIDTH,
    height: SCREEN_HEIGHT
  },
  title: {
    justifyContent: 'center',
    alignItems: 'center',
  },
  travelText: {
    // color: '#ffffff',
    fontSize: 26,
    fontFamily: 'bold',
    textAlign: 'center',
    width: '100%',
    height: 40,
    lineHeight: 40,
  },
  loginView: {
    justifyContent: 'center',
    alignItems: 'center',
  },
  register: {
    position: 'absolute',
    top: 10,
    right: 20,
  },
  loginTitle: {
    marginTop: 120,
  },
  loginInput: {
    width: '100%',
  }
})


