// @flow

import React, { Component } from 'react';
import {
    View,
    Text,
    TextInput,
    StyleSheet,
    ImageBackground,
    Dimensions,
    Image,
    findNodeHandle,
    Alert,
    AsyncStorage,
    TouchableOpacity
} from 'react-native';
// import Divide from 'react-native-divide'
import Icon from 'react-native-vector-icons/FontAwesome';
import { Input } from 'react-native-elements';
import { Button, InputItem, Checkbox } from 'antd-mobile-rn';
import requestPermission from 'root/src/utils/requestPermissions';//获取相机及其他权限
import * as AccountAction from 'root/src/actions/account';
import inputItemStyle from 'antd-mobile-rn/lib/input-item/style/index.native';
const inputStyle = {
    ...inputItemStyle,
    input: { ...inputItemStyle.input, color: '#fff' }
}
const { connect } = require('remx');
const SCREEN_WIDTH = Dimensions.get('window').width;
const SCREEN_HEIGHT = Dimensions.get('window').height;
const BG_IMAGE = require('root/img/login.jpg');
const LOGO_IMAGE = require('root/img/logo.png');

const QQ_IMAGE = require('root/img/qq.png');
const WCHAT_IMAGE = require('root/img/wChat.png');

const AgreeItem = Checkbox.AgreeItem;


@navigatorDecorator
export default class SetNewCode extends Component {
    constructor(props: Props) {
        super(props);
        this.time = 60;
        this.tt;
        this.state = {
            viewRef: null,
        };

    }
    componentWillMount() {

    }
    componentDidMount() {
    }

    sendCode = () => {
        if (!this.state.phone || this.state.phone.length < 11) {
            MyToast.info('请填写正确的手机号');
            return;
        }
        this.setState({ sendLoading: false })
        AccountAction.existIdentifier({ input: { phone: this.state.phone } }).then((suc) => {

            if (!suc.data) {
                MyToast.info(suc.msg, 3);
                return;
            }
            else {
                AccountAction.sendVerifiedCode({ input: { phone: this.state.phone, type: 2 } }).then((suc, msg) => {
                    this.startCodeTimer(() => {
                        this.setState({ sendLoading: true, })
                    })
                    if (suc.suc) {
                        MyToast.success('验证码发送成功');
                    }
                    else {
                        MyToast.info(suc.msg);
                    }
                })
            }
        })
    }
    startCodeTimer = (callback) => {
        let self = this;
        self.tt = setInterval(() => {
            self.setState({ time: self.time-- })
            if (self.time == -1) {
                self.time = 60;
                self.setState({ time: undefined })
                clearInterval(self.tt);
                callback && callback();
            }
        }, 1000)
    }

    nextStep = () => {
        if (!this.state.phone) {
            MyToast.info('请填写手机号');
            return;
        }
        if (!this.state.verificationCode) {
            MyToast.info('请填写验证码');
            return;
        }
        this.setState({ submitLoading: true })
        this.pushPage({
            component: {
                ...Global.Screens.SetNewPwd,
                passProps: { phone: this.state.phone, verificationCode: this.state.verificationCode },
            }
        })
    }

    imageLoaded = () => {
        this.setState({ viewRef: findNodeHandle(this.backgroundImage) });
    }
    render() {
        const { Account, navigator } = this.props;
        // const { getFieldProps } = this.props.form;
        return (
            < View style={styles.container} >
                <Image
                    ref={(img) => { this.backgroundImage = img; }}
                    source={BG_IMAGE}
                    style={styles.bgImage}
                    onLoadEnd={this.imageLoaded}
                />
                <TouchableOpacity
                    style={{ position: 'absolute', zIndex: 1000, top: 15, left: 15, flexDirection: 'row', alignItems: 'center' }}
                    onPress={() => {
                        this.pop()
                    }}>
                    <Text style={{ color: '#fff', flexDirection: 'row', alignItems: 'center', fontSize: 22 }}>
                        <Icon
                            name='chevron-left'
                            color='#fff'
                            size={22}
                        /> 返回
                    </Text>
                </TouchableOpacity>
                <View style={styles.loginView}>
                    <View style={styles.loginTitle}>
                        <Image
                            style={{ width: 180, height: 90 }}
                            source={{ uri: projectConfig.loginLogo }}
                        />
                        {/* <View style={styles.title}>
                            <Text style={styles.travelText}>农户APP</Text>
                        </View> */}
                    </View>
                    <View style={styles.loginInput}>
                        <View style={{ marginVertical: 15, flexDirection: 'row', }}>
                            <InputItem
                                styles={inputStyle}
                                style={{ height: 40, width: '90%', backgroundColor: 'transparent', borderBottomWidth: 1, borderBottomColor: 'white', paddingRight: 0 }}
                                clear
                                value={this.state.phone}
                                onChange={(value: any) => {
                                    if (value.length == 11) {
                                        this.setState({ sendLoading: true })
                                    }
                                    this.setState({
                                        phone: value,
                                    });
                                }}
                                // onBlur={this.existIdentifier}
                                labelNumber={2}
                                placeholder='请输入手机号'
                                placeholderTextColor='#cccccc'
                                maxLength={11}
                            >
                                <Icon
                                    name='user'
                                    color='#ffffff'
                                    size={25}
                                />
                            </InputItem>
                        </View>
                        <View style={{ marginVertical: 15, }}>
                            <InputItem
                                styles={inputStyle}
                                style={{ height: 40, width: '90%', backgroundColor: 'transparent', borderBottomWidth: 1, borderBottomColor: 'white', paddingRight: 0 }}
                                clear
                                type="text"
                                value={this.state.verificationCode}
                                onChange={(value: any) => {
                                    this.setState({
                                        verificationCode: value,
                                    });
                                }}
                                extra={
                                    <Button activeStyle={{ opacity: 0.5, backgroundColor: 'none' }} disabled={!this.state.sendLoading}
                                        size="small" style={{ height: 35, backgroundColor: 'transparent', borderWidth: 2, borderBottomWidth: 1, }} onClick={this.sendCode}>
                                        <Text style={{ fontSize: 12, fontWeight: 'bold', color: 'white' }}>发送验证码 {this.state.time}</Text>
                                    </Button>
                                }
                                labelNumber={2}
                                placeholder='请输入验证码'
                                placeholderTextColor='#cccccc'
                            >
                                <Icon
                                    name='lock'
                                    color='#ffffff'
                                    size={25}
                                />
                            </InputItem>
                        </View>
                        <View style={{ marginVertical: 35, width: '100%', alignItems: 'center', }}>
                            <Button
                                // disabled={this.state.submitLoading}
                                style={{ height: 40, width: '90%', backgroundColor: this.state.phone && this.state.verificationCode ? 'transparent' : '#cccccc', borderWidth: 2, borderColor: 'white', borderRadius: 5 }}
                                onClick={this.nextStep}
                                disabled={this.state.phone && this.state.verificationCode ? false : true}
                            >
                                <Text style={{ fontWeight: 'bold', color: 'white' }}>下一步</Text>
                            </Button>
                        </View>
                    </View>
                </View>
            </View >
        );
    }
}

const styles = StyleSheet.create({
    container: {
        flex: 1,

    },
    bgImage: {
        position: "absolute",
        flex: 1,
        top: 0,
        left: 0,
        width: SCREEN_WIDTH,
        height: SCREEN_HEIGHT,
        zIndex: 999
    },
    title: {
        justifyContent: 'center',
        alignItems: 'center',
    },
    travelText: {
        color: '#ffffff',
        fontSize: 26,
        fontFamily: 'bold',
        textAlign: 'center',
        width: '100%',
        height: 50,
        lineHeight: 50,
    },
    loginView: {
        justifyContent: 'center',
        alignItems: 'center',
    },
    register: {
        position: 'absolute',
        top: 30,
        right: 20,
    },
    loginTitle: {
        marginTop: 70,
    },
    loginInput: {
        width: '100%',
        alignItems: 'center',
    },
})


