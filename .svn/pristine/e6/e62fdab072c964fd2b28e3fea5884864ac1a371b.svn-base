// @flow

import React, { Component } from 'react';
import {
    StyleSheet,
    Text,
    View,
    // Button,
    ScrollView,
    TextInput,
    Alert,
} from 'react-native';
import { List, InputItem, TextareaItem, DatePicker, Picker, ImagePicker, Button } from 'antd-mobile-rn';
import * as PestImageAction from 'root/src/actions/pestImage';
import * as CommonAction from 'root/src/actions/common';
import store from 'root/src/stores/account';
import moment from 'moment';
import inputItemStyle from 'antd-mobile-rn/lib/input-item/style/index.native';
const inputStyle = {
    ...inputItemStyle,
    input: { ...inputItemStyle.input, borderWidth: 0, margin: 0, padding: 0 }
}
const { connect } = require('remx');
const Item = List.Item;
@navigatorDecorator
class ERPUploadImage extends Component {
    constructor(props) {
        super(props);
        this.state = {
            imageUrl: '',
            takePicMonth: new Date(),
            takePicAddress: '',
            takePicWaether: '',
            temperature: '',
            humiDity: '',
            ground: '',
        }
        Navigation.mergeOptions(this.props.componentId, {
            topBar: {
                rightButtons: [
                    confirmRightBtn
                ]
            }
        });
        Navigation.events().bindComponent(this);

    }
    navigationButtonPressed({ buttonId }) {
        this.state.takePicWaether = this.state.takePicWaether ? this.state.takePicWaether[0] : '晴天';
        // this.state.id = this.props.userInfo.userID
        this.state.takePicMonth = moment(this.state.takePicMonth).format('YYYY-MM-DD');
        let input = {
            imageUrl: this.state.imageUrl,
            pestId: this.props.pestId,
            pestName: this.props.pestName,
            plantName: this.props.plantName,
            takePicMonth: this.state.takePicMonth,
            takePicAddress: this.state.takePicAddress ? this.state.takePicAddress : "86-31/86-3101/86-310114/86-310114111",
            takePicWaether: this.state.takePicWaether,
            temperature: this.state.temperature,
            humiDity: this.state.humiDity,
            ground: this.state.ground
        }
        PestImageAction.UploadPestImage({ input: input }).then((suc) => {
            console.log(suc)
            if (suc.suc) {
                console.log(suc)
            }
        })

    }
    componentDidMount() {
        const areasData = getAreas()
        this.setState({ areasData })
    }
    componentWillReceiveProps(nextProps) {
    }

    handleFile2Change = (files, type, index) => {
        if (type == 'add') {
            var formData = new FormData();
            let file = { uri: files[0].url, type: 'application/octet-stream', name: 'image.jpg' };
            formData.append('avatar', file);
            console.log(files)
            CommonAction.UploadImg({ input: formData }).then((suc) => {
                if (suc.suc) {
                    console.log(suc)
                    this.setState({
                        imageUrl: suc.Data.url,
                    })
                    this.setState({
                        files: [{
                            url: ImgUrl + suc.Data.url,
                            id: suc.Data.url,
                        }],
                    });
                }
                else {
                    MyToast.info('上传头像失败')
                }
            })
        }
        else {
            this.setState({
                files,
                imageUrl: ''
            });
        }
    }
    render() {
        return (
            <ScrollView style={{ backgroundColor: '#F5FCFF' }}>
                <View style={{ alignItems: 'center', padding: 15 }}>
                    <ImagePicker
                        length="1"
                        onChange={this.handleFile2Change}
                        files={this.state.files}
                    />
                </View>

                <List>
                    <Item arrow="horizontal" wrap
                        onClick={() => {
                            this.pushPage({
                                component: {
                                    ...Global.Screens.MineType,
                                    passProps: { userType: this.userType },
                                }
                            })
                        }}> <InputItem
                            textAlign="right"
                            clear
                            onChangeText={text => this.setState({ temperature: text })}
                            placeholder="作物填写"
                            value={this.state.temperature}
                            placeholderTextColor='#cccccc'
                            styles={inputStyle}
                        ><Text style={{ color: 'gray' }}>作物填写</Text>
                        </InputItem></Item>
                    <Item>
                        <InputItem
                            textAlign="right"
                            clear
                            onChangeText={text => this.setState({ temperature: text })}
                            placeholder="病虫害填写"
                            value={this.state.temperature}
                            placeholderTextColor='#cccccc'
                        ><Text style={{ color: 'gray' }}>病虫害填写</Text>
                        </InputItem>
                    </Item>
                    <DatePicker
                        value={new Date(this.state.takePicMonth)}
                        mode="date"
                        minDate={new Date('1918-01-01')}
                        maxDate={new Date()}
                        onChange={text => this.setState({ takePicMonth: text })}
                        format="YYYY-MM-DD"
                    >
                        <Item arrow="horizontal" ><Text style={{ color: 'gray' }}>时间</Text></Item>
                    </DatePicker>
                    <Picker
                        style={{ height: 40, width: '100%', backgroundColor: 'transparent', borderBottomWidth: 1, borderBottomColor: '#999', }}
                        title="地点"
                        data={this.state.areasData}
                        cols={4}
                        value={this.state.takePicAddress}
                        format={this.format}
                        onChange={(v: any) => this.setState({ takePicAddress: v })}
                        onOk={(v: any) => this.setState({ takePicAddress: v })}
                    >
                        <Item arrow="horizontal"><Text style={{ color: 'gray' }}>地点</Text></Item>
                    </Picker>
                    <Picker
                        data={[{ value: '晴天', label: '晴天' }, { value: '阴天', label: '阴天' }, { value: '雨天', label: '雨天' }]}
                        cols={1}
                        onChange={text => { this.setState({ takePicWaether: text }) }}
                        value={this.state.takePicWaether}>
                        <Item arrow="horizontal"><Text style={{ color: 'gray' }}>天气</Text></Item>
                    </Picker>

                    <InputItem
                        textAlign="right"
                        clear
                        onChangeText={text => this.setState({ temperature: text })}
                        placeholder="温度"
                        value={this.state.temperature}
                        placeholderTextColor='#cccccc'
                    ><Text style={{ color: 'gray' }}>温度</Text>
                    </InputItem>


                    <InputItem
                        textAlign="right"
                        clear
                        onChangeText={text => this.setState({ humiDity: text })}
                        placeholder="湿度"
                        value={this.state.humiDity}
                        labelNumber={9}
                        placeholderTextColor='#cccccc'
                    ><Text style={{ color: 'gray' }}>湿度</Text>
                    </InputItem>
                    <InputItem
                        textAlign="right"
                        type='number'
                        clear
                        onChangeText={text => this.setState({ ground: text })}
                        placeholder="土壤"
                        value={this.state.ground}
                        labelNumber={9}
                        placeholderTextColor='#cccccc'
                    ><Text style={{ color: 'gray' }}>土壤</Text>
                    </InputItem>
                </List>
            </ScrollView>
        );
    }
}
function mapStateToProps() {
    return {
        userInfo: store.getAccount(),
        userId: store.getUserId()
    };
}

module.exports = connect(mapStateToProps)(ERPUploadImage);
const styles = StyleSheet.create({
    // userInfo: store.getAccount()
});
